border   = "black",
cex.axis = 0.8,
cex.lab  = 1.1
)
data <- c(starthours_weekdays_subscriber, stophours_weekdays_subscriber)
hist(data[data != -1],
breaks   = 24,
xlab     = "Hours",
ylab     = "Frequency",
main     = "Distribution for subscribers",
col      = "skyblue",
border   = "black",
cex.axis = 0.8,
cex.lab  = 1.1,
)
x_start <- dataset$start.station.latitude
y_start <- dataset$start.station.longitude
x_stop  <- dataset$end.station.latitude
y_stop  <- dataset$end.station.longitude
distances <- double(length(x_start))
# distHaversine() returns values in meters, so I divide by 1000 in order to have them in kilometers
for (i in 1:length(x_start)) {
distances[i] <- distHaversine(c(x_start[i], y_start[i]), c(x_stop[i], y_stop[i])) / 1000.00
}
time_in_hour <- dataset$tripduration / 60.00 / 60.00   # Converting in hours
average_speed <- distances / time_in_hour
average_speed <- average_speed[time_in_hour < 1]   # Discarding trips longer than 1 hour
# Printing the average speed of the first 100 users of the dataset just as an example
print("Average speed of 100 users (km/h):")
head(average_speed, 100)
distances <- distances[time_in_hour < 1]
limits <- c(0, 0.5, 1, 2, 3, max(distances))
for (i in 1:legth(limits)) {
if (i == length(limits)) {
break
}
else {
plot(distances[distances > limits[i] & distances < limits[i+1]],
average_speed[distances < 0.5],
main = sprintf("Average speed vs. Distance (%.0f m < d < %.0f m)", limits[i], limits[i+1]),
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
}
}
x_start <- dataset$start.station.latitude
y_start <- dataset$start.station.longitude
x_stop  <- dataset$end.station.latitude
y_stop  <- dataset$end.station.longitude
distances <- double(length(x_start))
# distHaversine() returns values in meters, so I divide by 1000 in order to have them in kilometers
for (i in 1:length(x_start)) {
distances[i] <- distHaversine(c(x_start[i], y_start[i]), c(x_stop[i], y_stop[i])) / 1000.00
}
time_in_hour <- dataset$tripduration / 60.00 / 60.00   # Converting in hours
average_speed <- distances / time_in_hour
average_speed <- average_speed[time_in_hour < 1]   # Discarding trips longer than 1 hour
# Printing the average speed of the first 100 users of the dataset just as an example
print("Average speed of 100 users (km/h):")
head(average_speed, 100)
distances <- distances[time_in_hour < 1]
limits <- c(0, 0.5, 1, 2, 3, max(distances))
for (i in 1:length(limits)) {
if (i == length(limits)) {
break
}
else {
plot(distances[distances > limits[i] & distances < limits[i+1]],
average_speed[distances < 0.5],
main = sprintf("Average speed vs. Distance (%.0f m < d < %.0f m)", limits[i], limits[i+1]),
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
}
}
x_start <- dataset$start.station.latitude
y_start <- dataset$start.station.longitude
x_stop  <- dataset$end.station.latitude
y_stop  <- dataset$end.station.longitude
distances <- double(length(x_start))
# distHaversine() returns values in meters, so I divide by 1000 in order to have them in kilometers
for (i in 1:length(x_start)) {
distances[i] <- distHaversine(c(x_start[i], y_start[i]), c(x_stop[i], y_stop[i])) / 1000.00
}
time_in_hour <- dataset$tripduration / 60.00 / 60.00   # Converting in hours
average_speed <- distances / time_in_hour
average_speed <- average_speed[time_in_hour < 1]   # Discarding trips longer than 1 hour
# Printing the average speed of the first 100 users of the dataset just as an example
print("Average speed of 100 users (km/h):")
head(average_speed, 100)
distances <- distances[time_in_hour < 1]
limits <- c(0, 0.5, 1, 2, 3, max(distances))
for (i in 1:length(limits)) {
if (i == length(limits)) {
break
}
else {
plot(distances[distances > limits[i] & distances < limits[i+1]],
average_speed[distances > limits[i] & distances < limits[i+1]],
main = sprintf("Average speed vs. Distance (%.0f m < d < %.0f m)", limits[i], limits[i+1]),
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
}
}
plot(distances[distances < 0.5],
average_speed[distances < 0.5],
main = "Average speed vs. Distance (d < 500 m)",
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
plot(distances[distances > 0.5 & distances < 1.0],
average_speed[distances > 0.5 & distances < 1.0],
main = "Average speed vs. Distance (500 m < d < 1000 m)",
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
plot(distances[distances > 1.0 & distances < 2.0],
average_speed[distances > 1.0 & distances < 2.0],
main = "Average speed vs. Distance (1000 m < d < 2000 m)",
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
plot(distances[distances > 2.0 & distances < 3.0],
average_speed[distances > 2.0 & distances < 3.0],
main = "Average speed vs. Distance (2000 m < d < 3000 m)",
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
plot(distances[distances > 3.0],
average_speed[distances > 3.0],
main = "Average speed vs. Distance (d > 3000 m)",
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
x_start <- dataset$start.station.latitude
y_start <- dataset$start.station.longitude
x_stop  <- dataset$end.station.latitude
y_stop  <- dataset$end.station.longitude
distances <- double(length(x_start))
# distHaversine() returns values in meters, so I divide by 1000 in order to have them in kilometers
for (i in 1:length(x_start)) {
distances[i] <- distHaversine(c(x_start[i], y_start[i]), c(x_stop[i], y_stop[i])) / 1000.00
}
time_in_hour <- dataset$tripduration / 60.00 / 60.00   # Converting in hours
average_speed <- distances / time_in_hour
average_speed <- average_speed[time_in_hour < 1]   # Discarding trips longer than 1 hour
# Printing the average speed of the first 100 users of the dataset just as an example
print("Average speed of 100 users (km/h):")
head(average_speed, 100)
distances <- distances[time_in_hour < 1]
limits <- c(0, 0.5, 1, 2, 3, max(distances))
for (i in 1:length(limits)) {
if (i == length(limits)) {
break
}
else {
plot(distances[distances > limits[i] & distances < limits[i+1]],
average_speed[distances > limits[i] & distances < limits[i+1]],
main = sprintf("Average speed vs. Distance (%.0f km < d < %.0f km)", limits[i], limits[i+1]),
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
}
}
plot(distances[distances < 0.5],
average_speed[distances < 0.5],
main = "Average speed vs. Distance (d < 500 m)",
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
plot(distances[distances > 0.5 & distances < 1.0],
average_speed[distances > 0.5 & distances < 1.0],
main = "Average speed vs. Distance (500 m < d < 1000 m)",
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
plot(distances[distances > 1.0 & distances < 2.0],
average_speed[distances > 1.0 & distances < 2.0],
main = "Average speed vs. Distance (1000 m < d < 2000 m)",
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
plot(distances[distances > 2.0 & distances < 3.0],
average_speed[distances > 2.0 & distances < 3.0],
main = "Average speed vs. Distance (2000 m < d < 3000 m)",
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
plot(distances[distances > 3.0],
average_speed[distances > 3.0],
main = "Average speed vs. Distance (d > 3000 m)",
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
x_start <- dataset$start.station.latitude
y_start <- dataset$start.station.longitude
x_stop  <- dataset$end.station.latitude
y_stop  <- dataset$end.station.longitude
distances <- double(length(x_start))
# distHaversine() returns values in meters, so I divide by 1000 in order to have them in kilometers
for (i in 1:length(x_start)) {
distances[i] <- distHaversine(c(x_start[i], y_start[i]), c(x_stop[i], y_stop[i])) / 1000.00
}
time_in_hour <- dataset$tripduration / 60.00 / 60.00   # Converting in hours
average_speed <- distances / time_in_hour
average_speed <- average_speed[time_in_hour < 1]   # Discarding trips longer than 1 hour
# Printing the average speed of the first 100 users of the dataset just as an example
print("Average speed of 100 users (km/h):")
head(average_speed, 100)
distances <- distances[time_in_hour < 1]
limits <- c(0, 0.5, 1, 2, 3, max(distances))
for (i in 1:length(limits)) {
if (i == length(limits)) {
break
}
else {
plot(distances[distances > limits[i] & distances < limits[i+1]],
average_speed[distances > limits[i] & distances < limits[i+1]],
main = sprintf("Average speed vs. Distance (%.1f km < d < %.1f km)", limits[i], limits[i+1]),
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
}
}
plot(distances[distances < 0.5],
average_speed[distances < 0.5],
main = "Average speed vs. Distance (d < 500 m)",
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
plot(distances[distances > 0.5 & distances < 1.0],
average_speed[distances > 0.5 & distances < 1.0],
main = "Average speed vs. Distance (500 m < d < 1000 m)",
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
plot(distances[distances > 1.0 & distances < 2.0],
average_speed[distances > 1.0 & distances < 2.0],
main = "Average speed vs. Distance (1000 m < d < 2000 m)",
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
plot(distances[distances > 2.0 & distances < 3.0],
average_speed[distances > 2.0 & distances < 3.0],
main = "Average speed vs. Distance (2000 m < d < 3000 m)",
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
plot(distances[distances > 3.0],
average_speed[distances > 3.0],
main = "Average speed vs. Distance (d > 3000 m)",
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
x_start <- dataset$start.station.latitude
y_start <- dataset$start.station.longitude
x_stop  <- dataset$end.station.latitude
y_stop  <- dataset$end.station.longitude
distances <- double(length(x_start))
# distHaversine() returns values in meters, so I divide by 1000 in order to have them in kilometers
for (i in 1:length(x_start)) {
distances[i] <- distHaversine(c(x_start[i], y_start[i]), c(x_stop[i], y_stop[i])) / 1000.00
}
time_in_hour <- dataset$tripduration / 60.00 / 60.00   # Converting in hours
average_speed <- distances / time_in_hour
average_speed <- average_speed[time_in_hour < 1]   # Discarding trips longer than 1 hour
# Printing the average speed of the first 100 users of the dataset just as an example
print("Average speed of 100 users (km/h):")
head(average_speed, 100)
distances <- distances[time_in_hour < 1]
limits <- c(0, 0.5, 1, 2, 3, max(distances))
for (i in 1:length(limits)) {
if (i == length(limits)) {
break
}
else {
plot(distances[distances > limits[i] & distances < limits[i+1]],
average_speed[distances > limits[i] & distances < limits[i+1]],
main = sprintf("Average speed vs. Distance (%.1f km < d < %.1f km)", limits[i], limits[i+1]),
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
}
}
x_start <- dataset$start.station.latitude
y_start <- dataset$start.station.longitude
x_stop  <- dataset$end.station.latitude
y_stop  <- dataset$end.station.longitude
distances <- double(length(x_start))
# distHaversine() returns values in meters, so I divide by 1000 in order to have them in kilometers
for (i in 1:length(x_start)) {
distances[i] <- distHaversine(c(x_start[i], y_start[i]), c(x_stop[i], y_stop[i])) / 1000.00
}
time_in_hour <- dataset$tripduration / 60.00 / 60.00   # Converting in hours
average_speed <- distances / time_in_hour
average_speed <- average_speed[time_in_hour < 1]   # Discarding trips longer than 1 hour
# Printing the average speed of the first 100 users of the dataset just as an example
print("Average speed of 100 users (km/h):")
head(average_speed, 100)
distances <- distances[time_in_hour < 1]
limits <- c(0, 0.5, 1, 2, 3, max(distances))
for (i in 1:length(limits)) {
if (i == length(limits)) {
break
}
else {
plot(distances[distances > limits[i] & distances < limits[i+1]],
average_speed[distances > limits[i] & distances < limits[i+1]],
main = sprintf("Average speed vs. Distance (%.1f km < Distance < %.1f km)", limits[i], limits[i+1]),
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
}
}
startmask = startmask[time_in_hour < 1]
for (i in 1:length(limits)) {
if (i == length(limits)) {
break
}
else {
plot(distances[distances > limits[i] & distances < limits[i+1] & startmask],
average_speed[distances > limits[i] & distances < limits[i+1] & startmask],
main = sprintf("Average speed vs. Distance in weekdays (%.1f km < Distance < %.1f km)", limits[i], limits[i+1]),
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
}
}
for (i in 1:length(limits)) {
if (i == length(limits)) {
break
}
else {
plot(distances[distances > limits[i] & distances < limits[i+1] & !startmask],
average_speed[distances > limits[i] & distances < limits[i+1] & !startmask],
main = sprintf("Average speed vs. Distance in weekends (%.1f km < Distance < %.1f km)", limits[i], limits[i+1]),
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
}
}
x_start <- dataset$start.station.latitude
y_start <- dataset$start.station.longitude
x_stop  <- dataset$end.station.latitude
y_stop  <- dataset$end.station.longitude
distances <- double(length(x_start))
# distHaversine() returns values in meters, so I divide by 1000 in order to have them in kilometers
for (i in 1:length(x_start)) {
distances[i] <- distHaversine(c(x_start[i], y_start[i]), c(x_stop[i], y_stop[i])) / 1000.00
}
time_in_hour <- dataset$tripduration / 60.00 / 60.00   # Converting in hours
average_speed <- distances / time_in_hour
average_speed <- average_speed[time_in_hour < 1]   # Discarding trips longer than 1 hour
# Printing the average speed of the first 100 users of the dataset just as an example
print("Average speed of 100 users (km/h):")
head(average_speed, 100)
distances <- distances[time_in_hour < 1]       # Discarding trips longer than 1 hour
limits <- c(0, 0.5, 1, 2, 3, max(distances))   # Vector of thresholds
for (i in 1:(length(limits)-1)) {
plot(distances[distances > limits[i] & distances < limits[i+1]],
average_speed[distances > limits[i] & distances < limits[i+1]],
main = sprintf("Average speed vs. Distance (%.1f km < Distance < %.1f km)", limits[i], limits[i+1]),
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
}
startmask = startmask[time_in_hour < 1]
for (i in 1:(length(limits)-1)) {
plot(distances[distances > limits[i] & distances < limits[i+1] & startmask],
average_speed[distances > limits[i] & distances < limits[i+1] & startmask],
main = sprintf("Average speed vs. Distance in weekdays (%.1f km < Distance < %.1f km)", limits[i], limits[i+1]),
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
}
for (i in 1:length(limits)) {
plot(distances[distances > limits[i] & distances < limits[i+1] & !startmask],
average_speed[distances > limits[i] & distances < limits[i+1] & !startmask],
main = sprintf("Average speed vs. Distance in weekends (%.1f km < Distance < %.1f km)", limits[i], limits[i+1]),
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
}
x_start <- dataset$start.station.latitude
y_start <- dataset$start.station.longitude
x_stop  <- dataset$end.station.latitude
y_stop  <- dataset$end.station.longitude
distances <- double(length(x_start))
# distHaversine() returns values in meters, so I divide by 1000 in order to have them in kilometers
for (i in 1:length(x_start)) {
distances[i] <- distHaversine(c(x_start[i], y_start[i]), c(x_stop[i], y_stop[i])) / 1000.00
}
time_in_hour <- dataset$tripduration / 60.00 / 60.00   # Converting in hours
average_speed <- distances / time_in_hour
average_speed <- average_speed[time_in_hour < 1]   # Discarding trips longer than 1 hour
# Printing the average speed of the first 100 users of the dataset just as an example
print("Average speed of 100 users (km/h):")
head(average_speed, 100)
distances <- distances[time_in_hour < 1]       # Discarding trips longer than 1 hour
limits <- c(0, 0.5, 1, 2, 3, max(distances))   # Vector of thresholds
for (i in 1:(length(limits)-1)) {
plot(distances[distances > limits[i] & distances < limits[i+1]],
average_speed[distances > limits[i] & distances < limits[i+1]],
main = sprintf("Average speed vs. Distance (%.1f km < Distance < %.1f km)", limits[i], limits[i+1]),
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
}
startmask = startmask[time_in_hour < 1]
for (i in 1:(length(limits)-1)) {
plot(distances[distances > limits[i] & distances < limits[i+1] & startmask],
average_speed[distances > limits[i] & distances < limits[i+1] & startmask],
main = sprintf("Average speed vs. Distance in weekdays (%.1f km < Distance < %.1f km)", limits[i], limits[i+1]),
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
}
for (i in 1:(length(limits)-1)) {
plot(distances[distances > limits[i] & distances < limits[i+1] & !startmask],
average_speed[distances > limits[i] & distances < limits[i+1] & !startmask],
main = sprintf("Average speed vs. Distance in weekends (%.1f km < Distance < %.1f km)", limits[i], limits[i+1]),
xlab = "Distance (km)",
ylab = "Average speed (km/h)",
col  = "steelblue"
)
grid()
}
start_station_frequencies <- table(dataset$start.station.name)
end_station_frequencies   <- table(dataset$end.station.name)
print(sprintf("Most common start station: %s (%d times)", names(which.max(start_station_frequencies)), max(start_station_frequencies)))
print(sprintf("Least popular end station: %s (%d time)", names(which.min(end_station_frequencies)), min(end_station_frequencies)))
start_station_count <- dataset[, c("start.station.longitude", "start.station.latitude")] %>%
group_by(start.station.longitude, start.station.latitude)         %>%
summarise(Count = n(), .groups = "drop")
ggplot(start_station_count, aes(x = start.station.longitude, y = start.station.latitude)) +
geom_point(aes(color = Count)) +
scale_color_gradient(low = "lightblue", high = "darkblue") +
labs(title = "Distribution of start stations", x = "Longitudine", y = "Latitudine") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
route_counter <- dataset %>%
count(start.station.name, end.station.name, name = "count") %>%
arrange(desc(count))
print("Three most common routes:")
for (i in 1:3) {
print(sprintf("%s -> %s (%d times)", route_counter$start.station.name[i], route_counter$end.station.name[i], route_counter$count[i]))
}
cat("\n")
print("Three least popular routes:")
for (i in 0:2) {
j <- nrow(route_counter) - i
print(sprintf("%s -> %s (%d time)", route_counter$start.station.name[j], route_counter$end.station.name[j], route_counter$count[j]))
}
